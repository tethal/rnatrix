Token { tt: LParen, span: @0:0-1, name: None }: "("
Token { tt: IntLiteral, span: @0:1-3, name: None }: "11"
Token { tt: Plus, span: @0:4-5, name: None }: "+"
Token { tt: IntLiteral, span: @0:6-8, name: None }: "22"
Token { tt: RParen, span: @0:8-9, name: None }: ")"
Token { tt: Star, span: @0:10-11, name: None }: "*"
Token { tt: IntLiteral, span: @0:12-14, name: None }: "99"
Token { tt: IntLiteral, span: @0:15-16, name: None }: "5"
Token { tt: Minus, span: @0:17-18, name: None }: "-"
Token { tt: IntLiteral, span: @0:19-20, name: None }: "3"
Token { tt: Slash, span: @0:21-22, name: None }: "/"
Token { tt: IntLiteral, span: @0:23-24, name: None }: "2"
Token { tt: FloatLiteral, span: @0:25-29, name: None }: "3.14"
Token { tt: KwTrue, span: @0:30-34, name: Some(Name(9)) }: "true"
Token { tt: KwFalse, span: @0:35-40, name: Some(Name(4)) }: "false"
Token { tt: KwNull, span: @0:41-45, name: Some(Name(7)) }: "null"
Token { tt: KwVar, span: @0:46-49, name: Some(Name(10)) }: "var"
Token { tt: KwFun, span: @0:50-53, name: Some(Name(5)) }: "fun"
Token { tt: Or, span: @0:54-56, name: None }: "||"
Token { tt: And, span: @0:57-59, name: None }: "&&"
Token { tt: Ne, span: @0:60-62, name: None }: "!="
Token { tt: Bang, span: @0:62-63, name: None }: "!"
Token { tt: Ge, span: @0:64-66, name: None }: ">="
Token { tt: Lt, span: @0:66-67, name: None }: "<"
Token { tt: Le, span: @0:68-70, name: None }: "<="
Token { tt: Gt, span: @0:70-71, name: None }: ">"
Token { tt: Percent, span: @0:72-73, name: None }: "%"
Token { tt: Eq, span: @0:74-76, name: None }: "=="
Token { tt: Assign, span: @0:76-77, name: None }: "="
Token { tt: Semicolon, span: @0:77-78, name: None }: ";"
Token { tt: LBrace, span: @0:79-80, name: None }: "{"
Token { tt: RBrace, span: @0:81-82, name: None }: "}"
Token { tt: Comma, span: @0:83-84, name: None }: ","
Token { tt: Eof, span: @0:85-85, name: None }: ""
